<!DOCTYPE html>
<html>

<head>

<style type='text/css'>
.button {
	display: inline-block; 
	padding: .1em .5em; 
	color: #ffffff;
	border-radius: 10px;
	border-width: 0px;
	font-size: 16px;
	font-weight: bold;
	background-color: #4682B4;
	cursor: pointer;  }
.contents {
	table-layout:auto;
	overflow-y:scroll;
	border:thin double #000;
	background-color: #696969;
	color: #F9F9FB;
	font-size:110%;
	font-family:Helvetica;  }
.text {
	width:98%;
	height:80px;
	background-color: #FFF8E1;
	font-size:90%;
	font-family:Helvetica;
}
</style>

</head>

<body style="background-color:#DCDCDC">
<table>
    <tr>
	<td width="45%" align="left"> <div id="sub_pos" style="height:20px"> Position: 0 / N </div> </td>
	<td width="50%" align="right"> Speed <input type="range" id="playSpeed" min="0.5" max="1.25" step="0.25" value="1"> </td>
	<td width="5%" align="left"> <div id="speedLabel"> 1 </div> </td>
    </tr>
    <tr>
	<td colspan=3> <div id="outputText" class="contents"/> </td>
    </tr>
    <tr>
	<td colspan=2 width="93%"> <textarea id="inputText" class="text"></textarea> </td>
	<td colspan=1 width="7%"> 
		<center><button class="button" onclick="compileText()"> Load </button></center>
		<P>
		<center><button class="button" onclick="doCopyText()"> Copy </button></center>
	</td>
    </tr>
</table>
</body>

<script type ="text/javascript">
var	fileSub, playSpeed, speedLabel, leftButton, rightButton;
var	outputText, inputText;
var	cur_pos, last_pos;
var	parts = new Array();
var	audio = new Audio();

window.onload = function () {
	document.addEventListener('keydown', hotKey, false);
	playSpeed = document.getElementById("playSpeed");
	playSpeed.addEventListener('change', changeSpeed, false);
	speedLabel = document.getElementById("speedLabel");
	outputText = document.getElementById("outputText");
	inputText = document.getElementById('inputText');
	cur_pos = 0;
	window.addEventListener("resize", resizeWindow);
	resizeWindow();
}

function	Item (label) { this.label = label; }	// Item class

function	resizeWindow () {
	vmargin = document.getElementById("speedLabel").clientHeight 
		+ inputText.clientHeight + 40;
	outputText.style.height = window.innerHeight - vmargin + 'px';
}

function	doPlayPart (pos) {	// play at pos_start
	lang = /[ㄱ-ㅎ|ㅏ-ㅣ|가-힣]/.test(parts[pos].label) ? "ko" : "en";
	textEncoded = encodeURIComponent(parts[pos].label);
	url = `https://translate.google.com/translate_tts?ie=UTF-8&tl=` + lang + `&client=tw-ob&q=${textEncoded}`;

	audio.src = url;
	audio.play();
	audio.playbackRate = playSpeed.valueAsNumber;

	if (cur_pos != pos) {
		cur_pos = pos;
		document.getElementById('sub_pos').innerHTML = 
			"Position: " + cur_pos + " / " + last_pos;
	}
}

// copy the part of text into clipboard
function	doCopyPart (pos) { navigator.clipboard.writeText(parts[pos].label); }

// copy the input text into clipboard
function	doCopyText () { navigator.clipboard.writeText(inputText.value); }

function	hotKey (e) {
//alert(e.keyCode);
	var	speed = playSpeed.valueAsNumber;

	if (e.keyCode == 90)		// previous: '<-' 37, 'z' 90
		{ if (1 < cur_pos)  doPlayPart(cur_pos-1); }
	else if (e.keyCode == 88)	// current: 'PgDn' 40, 'x' 88
		doPlayPart(cur_pos);
	else if (e.keyCode == 67)	// next: '->' 39, 'c' 67
		{ if (cur_pos < last_pos) doPlayPart(cur_pos+1); }
	else if (e.keyCode == 189)	// slower: '-'
		{ if (speed >= 0.75) speed -= 0.25; setSpeed(speed); }
	else if (e.keyCode == 187)	// faster: '='
		{ if (speed <= 1) speed += 0.25; setSpeed(speed); }
	else if (e.keyCode == 83)	// stop: 's'
		{ audio.pause(); }
}

function	changeSpeed (e) { setSpeed(playSpeed.valueAsNumber); }

function	setSpeed (speed) {
	audio.playbackRate = speed;
	speedLabel.innerHTML = "" + speed;
	playSpeed.value = speed;
}

function	compileText () {
	function	findAllParts(str) {
		EoS = ['. ', '? ', '! ', '." ', '?" ', '!" ', '," ', ': ', '—', '\n'];
		//SPS = [' ', '\n'];
		const indices = [];
		left = 0;

		// find sentences
		for (j = 0; j < EoS.length; j++) {
			patlen = EoS[j].length;
			idx = str.indexOf(EoS[j]);
			while (idx != -1) {
				indices.push(idx+patlen);
				idx = str.indexOf(EoS[j], idx+1);
			}
		}
		indices.push(str.length);
		indices.sort((a,b) => a-b);

		// split long verses
		N = indices.length;
		for (j = 0; j < N; j++) {
			left = (j == 0) ? 0 : indices[j-1];
			right = indices[j];
			for (i = left; i < right; i++)
				if (str[i] == ',' && left+15 < i && i < right-15) {
					indices.push(i+1);
					left = i+1;
				}
			left = indices[j] + 1;
		}
		indices.sort((a,b) => a-b);

		return indices;
	}
	function	add_text(i, s, parts) {
		parts[i] = new Item(s);
		return i.toString() + " :" + "\t<a onclick=\"doPlayPart("+i+");\" oncontextmenu=\"doCopyPart("+i+");\">"+s+"</a><br>";
	}

	var	text = document.getElementById('inputText').value;
	var	tags = "";
	var	n = 0;

	// split parts
	idx = findAllParts(text);
	
	// assemble the tags
	var left = 0;
	for (i = 0; i < idx.length; i++) {
		right = idx[i];
		var sent = text.substring(left, right).trim();
		left = right;
		if (sent) {
			n += 1;
			tags += add_text(n, sent, parts);
		}
	}
	last_pos = n;

	if (cur_pos > last_pos) cur_pos = last_pos;
	outputText.innerHTML = tags;
}

</script>
</html>
